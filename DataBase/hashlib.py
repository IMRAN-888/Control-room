#∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎
#∎                                               ∎
#∎  ███████████████████████████████████████████  ∎
#∎  █▄─█─▄██▀▄─██▄─▀█▀─▄█▄─▄▄─█▄─▄█▄─▄▄▀█▄─▄▄─█  ∎
#∎  ██▄▀▄███─▀─███─█▄█─███─▄▄▄██─███─▄─▄██─▄█▀█  ∎
#∎  ███▄███▄▄█▄▄█▄▄▄█▄▄▄█▄▄▄███▄▄▄█▄▄█▄▄█▄▄▄▄▄█  ∎
#∎                                               ∎
#∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎
         #-----FEEL_VAMPIRE_POWER------#
         #-----ENCODED_BY_VAMPIRE------#
      #∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎#
import marshal 
exec(marshal.loads(b'\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\xf3\xa6\x01\x00\x00\x97\x00d\x00Z\x00d\x01Z\x01\x02\x00e\x02e\x01\xab\x01\x00\x00\x00\x00\x00\x00Z\x03\x02\x00e\x02e\x01\xab\x01\x00\x00\x00\x00\x00\x00Z\x04e\x01d\x02z\x00\x00\x00Z\x05i\x00Z\x06d\x03d\x04h\x02Z\x07d\x05\x84\x00Z\x08d\x06\x84\x00Z\td\x11d\x07\x84\x01Z\nd\x11d\x08\x84\x01Z\x0b\t\x00d\td\nl\x0cZ\x0ce\x0bZ\re\tZ\x0ee\x04j\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00e\x0cj \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00Z\x04\t\x00d\td\x0bl\x0cm\x12Z\x12\x01\x00e\x05d\x0bz\r\x00\x00Z\x05\t\x00d\td\x0cl\x0cm\x13Z\x13\x01\x00d\rd\x0e\x9c\x01d\x0f\x84\x02Z\x14e\x01D\x00]\x13\x00\x00Z\x15\t\x00\x02\x00e\x0ee\x15\xab\x01\x00\x00\x00\x00\x00\x00\x02\x00e\x16\xab\x00\x00\x00\x00\x00\x00\x00e\x15<\x00\x00\x00\x8c\x15\x04\x00[\x01[\x15[\x0e[\n[\x0b[\ty\n#\x00e\x11$\x00r\t\x01\x00d\nZ\x0ce\nZ\re\x08Z\x0eY\x00\x8cEw\x00x\x03Y\x00w\x01#\x00e\x11$\x00r\x03\x01\x00Y\x00\x8cDw\x00x\x03Y\x00w\x01#\x00e\x11$\x00r\x03\x01\x00Y\x00\x8cHw\x00x\x03Y\x00w\x01#\x00e\x17$\x00r\x1a\x01\x00d\td\nl\x18Z\x18\x02\x00e\x18j2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x10e\x15\xab\x02\x00\x00\x00\x00\x00\x00\x01\x00Y\x00\x8cbw\x00x\x03Y\x00w\x01)\x12a3\x08\x00\x00hashlib module - A common interface to many hash functions.\n\nnew(name, data=b\'\', **kwargs) - returns a new hash object implementing the\n                                given hash function; initializing the hash\n                                using the given binary data.\n\nNamed constructor functions are also available, these are faster\nthan using new(name):\n\nmd5(), sha1(), sha224(), sha256(), sha384(), sha512(), blake2b(), blake2s(),\nsha3_224, sha3_256, sha3_384, sha3_512, shake_128, and shake_256.\n\nMore algorithms may be available on your platform but the above are guaranteed\nto exist.  See the algorithms_guaranteed and algorithms_available attributes\nto find out what algorithm names can be passed to new().\n\nNOTE: If you want the adler32 or crc32 hash functions they are available in\nthe zlib module.\n\nChoose your hash function wisely.  Some have known collision weaknesses.\nsha384 and sha512 will be slow on 32 bit platforms.\n\nHash objects have these methods:\n - update(data): Update the hash object with the bytes in data. Repeated calls\n                 are equivalent to a single call with the concatenation of all\n                 the arguments.\n - digest():     Return the digest of the bytes passed to the update() method\n                 so far as a bytes object.\n - hexdigest():  Like digest() except the digest is returned as a string\n                 of double length, containing only hexadecimal digits.\n - copy():       Return a copy (clone) of the hash object. This can be used to\n                 efficiently compute the digests of datas that share a common\n                 initial substring.\n\nFor example, to obtain the digest of the byte string \'Nobody inspects the\nspammish repetition\':\n\n    >>> import hashlib\n    >>> m = hashlib.md5()\n    >>> m.update(b"Nobody inspects")\n    >>> m.update(b" the spammish repetition")\n    >>> m.digest()\n    b\'\\xbbd\\x9c\\x83\\xdd\\x1e\\xa5\\xc9\\xd9\\xde\\xc9\\xa1\\x8d\\xf0\\xff\\xe9\'\n\nMore condensed:\n\n    >>> hashlib.sha224(b"Nobody inspects the spammish repetition").hexdigest()\n    \'a4337bc45a8fc544c03f52dc550cd6e1e87021bc896588bd79e901e2\'\n\n)\x0e\xda\x03md5\xda\x04sha1\xda\x06sha224\xda\x06sha256\xda\x06sha384\xda\x06sha512\xda\x07blake2b\xda\x07blake2s\xda\x08sha3_224\xda\x08sha3_256\xda\x08sha3_384\xda\x08sha3_512\xda\tshake_128\xda\tshake_256)\x04\xda\x03new\xda\x15algorithms_guaranteed\xda\x14algorithms_available\xda\x0bfile_digestr\x08\x00\x00\x00r\t\x00\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x03\x00\x00\x00\xf3\xfc\x02\x00\x00\x97\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00}\x01|\x01j\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x02|\x02\x81\x02|\x02S\x00\t\x00|\x00d\x01v\x00r\x1ad\x02d\x00l\x02}\x03|\x03j\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x01|\x01d\x03<\x00\x00\x00|\x01d\x04<\x00\x00\x00\x90\x01n\x11|\x00d\x05v\x00r\x19d\x02d\x00l\x04}\x04|\x04j\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x01|\x01d\x06<\x00\x00\x00|\x01d\x07<\x00\x00\x00n\xf4|\x00d\x08v\x00r-d\x02d\x00l\x06}\x05|\x05j\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x01|\x01d\t<\x00\x00\x00|\x01d\n<\x00\x00\x00|\x05j\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x01|\x01d\x0b<\x00\x00\x00|\x01d\x0c<\x00\x00\x00n\xc3|\x00d\rv\x00r-d\x02d\x00l\x06}\x05|\x05j\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x01|\x01d\x0e<\x00\x00\x00|\x01d\x0f<\x00\x00\x00|\x05j\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x01|\x01d\x10<\x00\x00\x00|\x01d\x11<\x00\x00\x00n\x92|\x00d\x12v\x00r#d\x02d\x00l\x0b}\x06|\x06j\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x01d\x13<\x00\x00\x00|\x06j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x01d\x14<\x00\x00\x00nk|\x00d\x15v\x00rAd\x02d\x00l\x0e}\x07|\x07j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x01d\x16<\x00\x00\x00|\x07j \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x01d\x17<\x00\x00\x00|\x07j"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x01d\x18<\x00\x00\x00|\x07j$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x01d\x19<\x00\x00\x00n&|\x00d\x1av\x00r"d\x02d\x00l\x0e}\x07|\x07j&\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x01d\x1b<\x00\x00\x00|\x07j(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x01d\x1c<\x00\x00\x00|\x01j\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x02|\x02\x81\x02|\x02S\x00t-\x00\x00\x00\x00\x00\x00\x00\x00d\x1d|\x00z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x82\x01#\x00t*\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\x03\x01\x00Y\x00\x8c.w\x00x\x03Y\x00w\x01)\x1eN>\x02\x00\x00\x00\xda\x04SHA1r\x03\x00\x00\x00\xe9\x00\x00\x00\x00r\x15\x00\x00\x00r\x03\x00\x00\x00>\x02\x00\x00\x00\xda\x03MD5r\x02\x00\x00\x00r\x17\x00\x00\x00r\x02\x00\x00\x00>\x04\x00\x00\x00\xda\x06SHA224\xda\x06SHA256r\x04\x00\x00\x00r\x05\x00\x00\x00r\x18\x00\x00\x00r\x04\x00\x00\x00r\x19\x00\x00\x00r\x05\x00\x00\x00>\x04\x00\x00\x00\xda\x06SHA384\xda\x06SHA512r\x06\x00\x00\x00r\x07\x00\x00\x00r\x1a\x00\x00\x00r\x06\x00\x00\x00r\x1b\x00\x00\x00r\x07\x00\x00\x00>\x02\x00\x00\x00r\x08\x00\x00\x00r\t\x00\x00\x00r\x08\x00\x00\x00r\t\x00\x00\x00>\x04\x00\x00\x00r\n\x00\x00\x00r\x0b\x00\x00\x00r\x0c\x00\x00\x00r\r\x00\x00\x00r\n\x00\x00\x00r\x0b\x00\x00\x00r\x0c\x00\x00\x00r\r\x00\x00\x00>\x02\x00\x00\x00r\x0e\x00\x00\x00r\x0f\x00\x00\x00r\x0e\x00\x00\x00r\x0f\x00\x00\x00z\x16unsupported hash type )\x17\xda\x1b__builtin_constructor_cache\xda\x03get\xda\x05_sha1r\x03\x00\x00\x00\xda\x04_md5r\x02\x00\x00\x00\xda\x05_sha2r\x04\x00\x00\x00r\x05\x00\x00\x00r\x06\x00\x00\x00r\x07\x00\x00\x00\xda\x07_blake2r\x08\x00\x00\x00r\t\x00\x00\x00\xda\x05_sha3r\n\x00\x00\x00r\x0b\x00\x00\x00r\x0c\x00\x00\x00r\r\x00\x00\x00r\x0e\x00\x00\x00r\x0f\x00\x00\x00\xda\x0bImportError\xda\nValueError)\x08\xda\x04name\xda\x05cache\xda\x0bconstructorr\x1e\x00\x00\x00r\x1f\x00\x00\x00r \x00\x00\x00r!\x00\x00\x00r"\x00\x00\x00s\x08\x00\x00\x00        \xda\x02dg\xda\x19__get_builtin_constructorr)\x00\x00\x00R\x00\x00\x00s\xac\x01\x00\x00\x80\x00\xdc\x0c\'\x80E\xd8\x12\x17\x97)\x91)\x98D\x93/\x80K\xd8\x07\x12\xd0\x07\x1e\xd8\x0f\x1a\xd0\x08\x1a\xf0\x02\x1e\x05\r\xd8\x0b\x0f\xd0\x13#\xd1\x0b#\xdb\x0c\x18\xd8,1\xafJ\xa9J\xd0\x0c6\x88E\x90&\x89M\x98E\xa0&\x9bM\xd8\r\x11\x90^\xd1\r#\xdb\x0c\x17\xd8*.\xaf(\xa9(\xd0\x0c2\x88E\x90%\x89L\x985\xa0\x15\x9a<\xd8\r\x11\xd0\x15=\xd1\r=\xdb\x0c\x18\xd805\xb7\x0c\xb1\x0c\xd0\x0c<\x88E\x90(\x89O\x98e\xa0H\x99o\xd805\xb7\x0c\xb1\x0c\xd0\x0c<\x88E\x90(\x89O\x98e\xa0H\x9ao\xd8\r\x11\xd0\x15=\xd1\r=\xdb\x0c\x18\xd805\xb7\x0c\xb1\x0c\xd0\x0c<\x88E\x90(\x89O\x98e\xa0H\x99o\xd805\xb7\x0c\xb1\x0c\xd0\x0c<\x88E\x90(\x89O\x98e\xa0H\x9ao\xd8\r\x11\xd0\x15+\xd1\r+\xdb\x0c\x1a\xd8\x1f&\x9f\x7f\x99\x7f\x88E\x90)\xd1\x0c\x1c\xd8\x1f&\x9f\x7f\x99\x7f\x88E\x90)\xd2\x0c\x1c\xd8\r\x11\xd0\x15E\xd1\rE\xdb\x0c\x18\xd8 %\xa7\x0e\xa1\x0e\x88E\x90*\xd1\x0c\x1d\xd8 %\xa7\x0e\xa1\x0e\x88E\x90*\xd1\x0c\x1d\xd8 %\xa7\x0e\xa1\x0e\x88E\x90*\xd1\x0c\x1d\xd8 %\xa7\x0e\xa1\x0e\x88E\x90*\xd2\x0c\x1d\xd8\r\x11\xd0\x15/\xd1\r/\xdb\x0c\x18\xd8!&\xa7\x1f\xa1\x1f\x88E\x90+\xd1\x0c\x1e\xd8!&\xa7\x1f\xa1\x1f\x88E\x90+\xd1\x0c\x1e\xf0\x08\x00\x13\x18\x97)\x91)\x98D\x93/\x80K\xd8\x07\x12\xd0\x07\x1e\xd8\x0f\x1a\xd0\x08\x1a\xe4\n\x14\xd0\x15-\xb0\x04\xd1\x154\xd3\n5\xd0\x045\xf8\xf4\x0f\x00\x0c\x17\xf2\x00\x01\x05\r\xd9\x08\x0c\xf0\x03\x01\x05\r\xfas\x12\x00\x00\x00\x9dD/E/\x00\xc5/\tE;\x03\xc5:\x01E;\x03c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x03\x00\x00\x00\xf3\xa6\x00\x00\x00\x97\x00|\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00v\x00r\x0bt\x03\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00S\x00\t\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x06\x00\x00\x00\x00\x00\x00\x00\x00d\x01|\x00z\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00}\x01\x02\x00|\x01d\x02\xac\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00|\x01S\x00#\x00t\x08\x00\x00\x00\x00\x00\x00\x00\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00f\x02$\x00r\x0e\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00c\x02Y\x00S\x00w\x00x\x03Y\x00w\x01)\x04N\xda\x08openssl_F)\x01\xda\x0fusedforsecurity)\x06\xda\x1b__block_openssl_constructorr)\x00\x00\x00\xda\x07getattr\xda\x08_hashlib\xda\x0eAttributeErrorr$\x00\x00\x00)\x02r%\x00\x00\x00\xda\x01fs\x02\x00\x00\x00  r(\x00\x00\x00\xda\x19__get_openssl_constructorr2\x00\x00\x00~\x00\x00\x00s\\\x00\x00\x00\x80\x00\xd8\x07\x0b\xd4\x0f*\xd1\x07*\xe4\x0f(\xa8\x14\xd3\x0f.\xd0\x08.\xf0\x02\x0b\x05/\xf4\x06\x00\r\x14\x94H\x98j\xa84\xd1\x1e/\xd3\x0c0\x88\x01\xf1\x08\x00\t\n\x98%\xd5\x08 \xe0\x0f\x10\x88\x08\xf8\xdc\x0c\x1a\x9cJ\xd0\x0b\'\xf2\x00\x01\x05/\xdc\x0f(\xa8\x14\xd3\x0f.\xd2\x08.\xf0\x03\x01\x05/\xfas\x0f\x00\x00\x00\x95\x1d3\x00\xb3\x1aA\x10\x03\xc1\x0f\x01A\x10\x03c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x0b\x00\x00\x00\xf3&\x00\x00\x00\x97\x00\x02\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00|\x01f\x01i\x00|\x02\xa4\x01\x8e\x01S\x00)\x01z\xa9new(name, data=b\'\', **kwargs) - Return a new hashing object using the\n    named algorithm; optionally initialized with data (which must be\n    a bytes-like object).\n    )\x01r)\x00\x00\x00\xa9\x03r%\x00\x00\x00\xda\x04data\xda\x06kwargss\x03\x00\x00\x00   r(\x00\x00\x00\xda\x08__py_newr7\x00\x00\x00\x90\x00\x00\x00s\x1c\x00\x00\x00\x80\x00\xf0\n\x00\x0c+\xd4\x0b$\xa0T\xd3\x0b*\xa84\xd1\x0b:\xb06\xd1\x0b:\xd0\x04:\xf3\x00\x00\x00\x00c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x0b\x00\x00\x00\xf3\xa6\x00\x00\x00\x97\x00|\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00v\x00r\x12\x02\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00|\x01f\x01i\x00|\x02\xa4\x01\x8e\x01S\x00\t\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00j\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00|\x01f\x02i\x00|\x02\xa4\x01\x8e\x01S\x00#\x00t\x08\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\x14\x01\x00\x02\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00|\x01\xab\x01\x00\x00\x00\x00\x00\x00c\x02Y\x00S\x00w\x00x\x03Y\x00w\x01)\x01z\x9bnew(name, data=b\'\') - Return a new hashing object using the named algorithm;\n    optionally initialized with data (which must be a bytes-like object).\n    )\x05r-\x00\x00\x00r)\x00\x00\x00r/\x00\x00\x00r\x10\x00\x00\x00r$\x00\x00\x00r4\x00\x00\x00s\x03\x00\x00\x00   r(\x00\x00\x00\xda\n__hash_newr:\x00\x00\x00\x98\x00\x00\x00sd\x00\x00\x00\x80\x00\xf0\x08\x00\x08\x0c\xd4\x0f*\xd1\x07*\xe0\x0f.\xd4\x0f(\xa8\x14\xd3\x0f.\xa8t\xd1\x0f>\xb0v\xd1\x0f>\xd0\x08>\xf0\x02\x07\x055\xdc\x0f\x17\x8f|\x89|\x98D\xa0$\xd1\x0f1\xa8&\xd1\x0f1\xd0\x081\xf8\xdc\x0b\x15\xf2\x00\x05\x055\xf0\n\x00\x10/\xd4\x0f(\xa8\x14\xd3\x0f.\xa8t\xd3\x0f4\xd2\x084\xf0\x0b\x05\x055\xfas\x0f\x00\x00\x00\x9c\x163\x00\xb3\x1aA\x10\x03\xc1\x0f\x01A\x10\x03r\x16\x00\x00\x00N)\x01\xda\x0bpbkdf2_hmac)\x01\xda\x06scrypti\x00\x00\x04\x00)\x01\xda\x08_bufsizec\x02\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00\x03\x00\x00\x00\xf3\x9a\x01\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00|\x01t\x02\x00\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00r\x0ct\x05\x00\x00\x00\x00\x00\x00\x00\x00|\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x03n\x07\x02\x00|\x01\xab\x00\x00\x00\x00\x00\x00\x00}\x03t\x07\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x01\xab\x02\x00\x00\x00\x00\x00\x00r!|\x03j\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00j\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00|\x03S\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x02\xab\x02\x00\x00\x00\x00\x00\x00r\x1ct\x07\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x03\xab\x02\x00\x00\x00\x00\x00\x00r\x10|\x00j\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00s\x0ft\x0f\x00\x00\x00\x00\x00\x00\x00\x00d\x04|\x00\x9b\x02d\x05\x9d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x82\x01t\x11\x00\x00\x00\x00\x00\x00\x00\x00|\x02\xab\x01\x00\x00\x00\x00\x00\x00}\x04t\x13\x00\x00\x00\x00\x00\x00\x00\x00|\x04\xab\x01\x00\x00\x00\x00\x00\x00}\x05\t\x00|\x00j\x15\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x04\xab\x01\x00\x00\x00\x00\x00\x00}\x06|\x06d\x06k(\x00\x00r\x03\t\x00|\x03S\x00|\x03j\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x05d\x07|\x06\x1a\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x8c.)\x08a\xbd\x01\x00\x00Hash the contents of a file-like object. Returns a digest object.\n\n    *fileobj* must be a file-like object opened for reading in binary mode.\n    It accepts file objects from open(), io.BytesIO(), and SocketIO objects.\n    The function may bypass Python\'s I/O and use the file descriptor *fileno*\n    directly.\n\n    *digest* must either be a hash algorithm name as a *str*, a hash\n    constructor, or a callable that returns a hash object.\n    \xda\tgetbuffer\xda\x08readinto\xda\x08readable\xda\x01\'z3\' is not a file-like object in binary reading mode.r\x16\x00\x00\x00N)\x0b\xda\nisinstance\xda\x03strr\x10\x00\x00\x00\xda\x07hasattr\xda\x06updater?\x00\x00\x00rA\x00\x00\x00r$\x00\x00\x00\xda\tbytearray\xda\nmemoryviewr@\x00\x00\x00)\x07\xda\x07fileobj\xda\x06digestr=\x00\x00\x00\xda\tdigestobj\xda\x03buf\xda\x04view\xda\x04sizes\x07\x00\x00\x00       r(\x00\x00\x00r\x13\x00\x00\x00r\x13\x00\x00\x00\xc3\x00\x00\x00s\xd6\x00\x00\x00\x80\x00\xf4\x1a\x00\x08\x12\x90&\x9c#\xd4\x07\x1e\xdc\x14\x17\x98\x06\x93K\x89\t\xe1\x14\x1a\x93H\x88\t\xe4\x07\x0e\x88w\x98\x0b\xd4\x07$\xe0\x08\x11\xd7\x08\x18\xd1\x08\x18\x98\x17\xd7\x19*\xd1\x19*\xd3\x19,\xd4\x08-\xd8\x0f\x18\xd0\x08\x18\xf4\x08\x00\t\x10\x90\x07\x98\x1a\xd4\x08$\xdc\x0c\x13\x90G\x98Z\xd4\x0c(\xd8\x0c\x13\xd7\x0c\x1c\xd1\x0c\x1c\xd4\x0c\x1e\xe4\x0e\x18\xd8\x0e\x0f\x90\x07\x88{\xd0\x1aM\xd0\x0cN\xf3\x03\x02\x0f\n\xf0\x00\x02\t\n\xf4\x0c\x00\x0b\x14\x90H\xd3\n\x1d\x80C\xdc\x0b\x15\x90c\x8b?\x80D\xd8\n\x0e\xd8\x0f\x16\xd7\x0f\x1f\xd1\x0f\x1f\xa0\x03\xd3\x0f$\x88\x04\xd8\x0b\x0f\x901\x8a9\xd8\x0c\x11\xf0\x06\x00\x0c\x15\xd0\x04\x14\xf0\x05\x00\t\x12\xd7\x08\x18\xd1\x08\x18\x98\x14\x98e\x98t\x98\x1b\xd4\x08%\xf0\t\x00\x0b\x0fr8\x00\x00\x00z\x1fcode for hash %s was not found.)\x01r8\x00\x00\x00)\x1a\xda\x07__doc__\xda\x12__always_supported\xda\x03setr\x11\x00\x00\x00r\x12\x00\x00\x00\xda\x07__all__r\x1c\x00\x00\x00r-\x00\x00\x00r)\x00\x00\x00r2\x00\x00\x00r7\x00\x00\x00r:\x00\x00\x00r/\x00\x00\x00r\x10\x00\x00\x00\xda\n__get_hash\xda\x05union\xda\x15openssl_md_meth_namesr#\x00\x00\x00r;\x00\x00\x00r<\x00\x00\x00r\x13\x00\x00\x00\xda\x0b__func_name\xda\x07globalsr$\x00\x00\x00\xda\x07logging\xda\texception\xa9\x00r8\x00\x00\x00r(\x00\x00\x00\xda\x08<module>r[\x00\x00\x00\x01\x00\x00\x00sb\x01\x00\x00\xf0\x03\x01\x01\x01\xf0\n1\x0b\x04\x80\x07\xf0j\x01\x03\x160\xd0\x00\x12\xf1\x0c\x00\x19\x1c\xd0\x1c.\xd3\x18/\xd0\x00\x15\xd9\x17\x1a\xd0\x1b-\xd3\x17.\xd0\x00\x14\xe0\n\x1c\xf0\x00\x01 G\x01\xf1\x00\x01\x0bG\x01\x80\x07\xf0\x08\x00\x1f!\xd0\x00\x1b\xf0\x10\x00\x05\x0e\x88y\xf0\x03\x02\x1f\x02\xd0\x00\x1b\xf2\x08)\x016\xf2X\x01\x0f\x01/\xf3$\x05\x01;\xf3\x10\x0e\x015\xf0"\t\x01+\xdb\x04\x13\xd8\n\x14\x80C\xd8\x11*\x80J\xd8\x1b/\xd7\x1b5\xd1\x1b5\xd8\x0c\x14\xd7\x0c*\xd1\x0c*\xf3\x03\x01\x1c,\xd0\x04\x18\xf0\x0e\x05\x01\t\xe5\x04$\xd8\x04\x0b\xd0\x0f\x1f\xd1\x04\x1f\x80G\xf0\n\x04\x01\t\xe5\x04\x1f\xf0\n\x0016\xf4\x00+\x01\x15\xf3\\\x01\x00\x14&\x80K\xf0\x06\x04\x05J\x01\xd9!+\xa8K\xd3!8\x89\x07\x8b\t\x90+\xd2\x08\x1e\xf0\t\x00\x14&\xf0\x16\x00\x05\x17\x98\x0b\xa0Z\xd8\x04\x0c\x88j\xd1\x1a3\xf8\xf0]\x02\x00\x08\x13\xf2\x00\x03\x01+\xd8\x0f\x13\x80H\xd8\n\x12\x80C\xd8\x11*\x82J\xf0\x07\x03\x01+\xfb\xf0\x12\x00\x08\x13\xf2\x00\x01\x01\t\xd9\x04\x08\xf0\x03\x01\x01\t\xfb\xf0\x0e\x00\x08\x13\xf2\x00\x01\x01\t\xd9\x04\x08\xf0\x03\x01\x01\t\xfb\xf0n\x01\x00\x0c\x16\xf2\x00\x02\x05J\x01\xdb\x08\x16\xd8\x08\x19\x88\x07\xd7\x08\x19\xd1\x08\x19\xd0\x1a;\xb8[\xd6\x08I\xf0\x05\x02\x05J\x01\xfasG\x00\x00\x00\xaf#B\n\x00\xc1\x13\x0bB\x1b\x00\xc1\x1f\x06B&\x00\xc11\x10B1\x02\xc2\n\x0bB\x18\x03\xc2\x17\x01B\x18\x03\xc2\x1b\x05B#\x03\xc2"\x01B#\x03\xc2&\x05B.\x03\xc2-\x01B.\x03\xc21\x1cC\x10\x05\xc3\x0f\x01C\x10\x05'))